@using System.Buffers.Binary
@using System.Collections
@using System.Text
@using System.Text.Json
@using NewTsWw.Models.Werewolf
@using WerewolfAchievementViewer.Components
@using WerewolfAchievementViewer.Werewolf

<div class="test-achs-container">
    <div class="test-achived-container achs-container">
        <div class="test-achs-header">
            <h2>Achieved:</h2>
        </div>

        <Achievements AchievementInfos="AchievementInfos" />
    </div>

    <div class="test-not-achived-container achs-container">
        <div class="test-achs-header">
            <h2>Missing:</h2>
        </div>

        <Achievements AchievementInfos="MissingAchievements" />
    </div>
</div>

@code {
    [Parameter]
    public IEnumerable<AchievementId>? AchievementIds { get; set; } = null;

    [Parameter]
    public IEnumerable<AchievementInfo>? AchievementInfos { get; set; } = null;

    [Parameter]
    public IEnumerable<AchievementInfo>? MissingAchievements { get; set; } = null;

    protected override void OnParametersSet()
    {
        AchievementInfos ??= AchievementIds is not null
            ? NewTsWw.Models.Werewolf.Achievements.All
                .Where(x => AchievementIds.Contains(x.AchievementId))
            : [];

        MissingAchievements = NewTsWw.Models.Werewolf.Achievements.All
            .Where(x => !AchievementInfos.Any(y => y.AchievementId == x.AchievementId));
    }
}
